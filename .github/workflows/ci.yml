name: Continuous Integration

on:
  schedule:
    - cron: "0 1 * * *"

  push:
    branches:
      - develop
      - master
      - main
    paths-ignore:
      - 'libs/**'
      - 'index.html'

  pull_request:
    branches:
      - develop
      - master
      - main
    paths-ignore:
      - 'libs/**'
      - 'index.html'

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}

    strategy:
      matrix:
        include:
          - { name: "Update Pages", os: ubuntu-22.04 }

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - run: pip install -r requirements.txt

      - name: Boost Clone
        uses: ./.github/actions/boost_clone
        with:
          boost_dir: boost
          branch: develop
          patches: https://github.com/CppAlliance/buffers.git,https://github.com/CppAlliance/http_proto.git,https://github.com/CppAlliance/http_io.git,https://github.com/boostorg/redis.git,https://github.com/klemens-morgenstern/asem

      - name: Build Boostdep
        working-directory: boost
        run: |
          cd tools/build
          ./bootstrap.sh
          b2_executable=$(pwd)/b2
          cd ../..
          $b2_executable tools/boostdep/build

      - name: Symlink tools
        working-directory: boost
        run: |
          for tool in "tools"/*/; do   tool_name=$(basename ${tool}); ln -sf "tools/${tool_name}" "libs/${tool_name}"; done

      - name: Report corpus
        uses: actions/cache@v4
        id: report-corpus
        with:
          path: report.txt
          key: corpus-${{ github.run_id }}
          enableCrossOsArchive: true
          restore-keys: |
            corpus-

      - name: Generate report
        id: generate-report
        run: |
          set -x
          boostdep_executable=./boost/dist/bin/boostdep
          $boostdep_executable --boost-root ./boost --module-levels > report2.txt
          if [ -f report.txt ]; then
            if diff -q report.txt report2.txt > /dev/null 2>&1; then
              echo "No changes in report"
              cat report2.txt
              echo "report-changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes in report"
              set +e
              diff report.txt report2.txt
              set -e
              echo "report-changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous report found"
            cat report2.txt
            echo "report-changed=true" >> $GITHUB_OUTPUT
          fi          
          mv report2.txt report.txt

      - name: Generate visual report
        if: steps.generate-report.outputs.report-changed == 'true'
        run: |
          python main.py -v --boost-root ./boost --boostdep ./boost/dist/bin/boostdep --output report

      - name: Identify auto-commit
        if: startswith(github.event.commits[0].message, 'Update Pages') && steps.generate-report.outputs.report-changed == 'true'
        run: echo "is-auto-commit=true" >> $GITHUB_ENV

      - name: Commit
        if: env.is-auto-commit != true && steps.generate-report.outputs.report-changed == 'true'
        run: |
          cur_date=$(date +"%d %B, %Y")
          git_author=$(git log -n 1 --format='%an')
          git_email=$(git log -n 1 --format='%ae')
          git config --global user.name "$git_author"
          git config --global user.email "$git_email"
          git add index.html libs
          git commit -a -m "Update Pages ($cur_date)"
          git push
          
  


